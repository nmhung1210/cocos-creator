"use strict";var __importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n.default=e,n};Object.defineProperty(exports,"__esModule",{value:!0});const events_1=require("events"),electron_1=require("electron"),sender_1=require("./sender"),event_1=require("./event"),channelPool=__importStar(require("v-electron-channel")),pkg=require("../package.json"),ipcFlag=`${pkg.name}@${pkg.version}`,eventBus=new events_1.EventEmitter;function broadcast(e,...n){let r={message:e,arguments:n};electron_1.BrowserWindow.getAllWindows().forEach(e=>{e.isDestroyed()||e.webContents.send(`${ipcFlag}:broadcast`,r)})}function emit(e,...n){let r=eventBus._events[e];return r||(r=[]),Array.isArray(r)||(r=[r]),new sender_1.EventSender(r,{message:e.toString(),arguments:n})}function sendToWin(e,n,...r){return new sender_1.WindowSender(e.webContents,{message:n,arguments:r})}function sendToContent(e,n,...r){const t=electron_1.webContents.fromId(e);if(!t)throw"The specified webContent does not exist";return new sender_1.WindowSender(t,{message:n,arguments:r})}function on(e,n){return eventBus.on(e,n)}function once(e,n){return eventBus.once(e,n)}function removeListener(e,n){return eventBus.removeListener(e,n)}function removeAllListeners(e){return eventBus.removeAllListeners(e)}function registerChannel(e){channelPool.register(`${ipcFlag}:${e}`)}function unregisterChannel(e){channelPool.unregister(`${ipcFlag}:${e}`)}function sendToChannel(e,n,...r){const t=channelPool.query(`${ipcFlag}:${e}`);if(!t)throw new Error(`Channel does not exist: ${e}`);const s=t[0];if(-1===s)return emit(n,...r);const o=electron_1.webContents.fromId(s);if(!o)throw new Error(`Channel does not exist: ${e}`);return new sender_1.WindowSender(o,{message:n,arguments:r})}exports._events=eventBus._events,exports.broadcast=broadcast,exports.emit=emit,exports.sendToWin=sendToWin,exports.sendToContent=sendToContent,exports.on=on,exports.once=once,exports.removeListener=removeListener,exports.removeAllListeners=removeAllListeners,exports.registerChannel=registerChannel,exports.unregisterChannel=unregisterChannel,exports.sendToChannel=sendToChannel,electron_1.ipcMain.on(`${ipcFlag}:send`,(e,n)=>{let r=new event_1.MessageEvent("renderer");r.sender=e.sender,n.needCallback&&(r.needCallback=!0,r.reply=function(r,...t){if(!r||r instanceof Error||console.log(`${n.message} - The first parameter of event.reply must be 'Error'`),e.sender.isDestroyed())return;const s=n.original?t||[]:JSON.stringify(t||[]);e.sender.send(`${ipcFlag}:send-reply`,n.cid,event_1.serializeError(r),s)}),eventBus.emit(n.message,r,...n.arguments)}),electron_1.ipcMain.on(`${ipcFlag}:sendSync`,async(e,n)=>{let r=new event_1.MessageEvent("renderer");r.sender=e.sender;let t=eventBus._events[n.message];if(t){Array.isArray(t)||(t=[t]);try{const s=await t[0](r,...n.arguments);e.returnValue={error:null,value:s}}catch(n){e.returnValue={error:event_1.serializeError(n),value:null}}for(let e=1;e<t.length;e++){let s=t[e];await s(r,...n.arguments)}}else e.returnValue=Object.create(null)}),electron_1.ipcMain.on(`${ipcFlag}:send-reply`,(e,n,r,t)=>{let s=sender_1.WindowSender.query(n);if(s){if(clearTimeout(s._timer),s._callback){s.options.original||JSON.parse(t);s._callback(event_1.deserializeError(r),...JSON.parse(t))}sender_1.WindowSender.remove(n)}else console.warn("Sender does not exist")});