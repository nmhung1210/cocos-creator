"use strict";const{EventEmitter:EventEmitter}=require("events"),fs=require("fs"),ps=require("path"),ipc=require("@base/electron-base-ipc"),utils=require("../utils"),data=require("./data"),Profile=require("./profile"),pkg=require("../../package.json"),ipcFlag=`${pkg.name}@${pkg.version}`;class ProfileManager extends EventEmitter{constructor(){super(),this._type2path=Object.create(null),this._type2inherit=Object.create(null)}register(e,t){if(!fs.existsSync(t))return void console.log(`The registration profile failed: '${t}' does not exist.`);fs.statSync(t).isDirectory()?this._type2path[e]=t:console.log(`The registration profile failed: '${t}' is not a folder.`)}query(e){return this._type2path[e]||""}inherit(e,t){return t&&(this._type2inherit[e]=t),this._type2inherit[e]||""}clear(){this._type2path=Object.create(null),this._type2inherit=Object.create(null),data.clear()}load(e){const t=utils.formatUrl(e);if(!t||!this._type2path[t.type])return console.warn(`Load profile failed: ${e}`),null;data.load(ps.join(this._type2path[t.type],t.path));const r=[];let i=t.type;for(;i;)r.push({type:i,path:this._type2path[i]}),i=manager.inherit(i);return new Profile(t.path,t.type,r)}}let manager=module.exports=new ProfileManager;ipc.on(`${ipcFlag}:save`,(e,t,r)=>{let i=manager.query(t);if(!i)throw new Error(`Profile save failed: profile://${t}${r}`);let a=ps.join(i,r);data.save(a),manager.emit("change",`${t}://${r}`),ipc.broadcast(`${ipcFlag}:change`,t,r)}),ipc.on(`${ipcFlag}:get`,(e,t,r,i,a)=>{a=a||{};const p=[];if(!i){for(;t;){const e=data.load(ps.join(manager._type2path[t],r))||{};if("current"===a.type)return e;if("deep"!==a.type)return e;p.push(e),t=manager.inherit(t)}const e={};let i=p.pop();for(;i;)utils.mergeJSON(e,i),i=p.pop();return e}let n=i.split(".");for(;t;){const e=data.load(ps.join(manager._type2path[t],r)),i=utils.findData(e,n);if("current"===a.type)return i;if(void 0!==i){if("deep"!==a.type)return i;p.push(i)}t=manager.inherit(t)}if(utils.isJSON(p[0])){let e=p.pop();const t={};for(;e;)utils.isJSON(e)&&utils.mergeJSON(t,e),e=p.pop();return t}return p[0]}),ipc.on(`${ipcFlag}:set`,(e,t,r,i,a)=>{data.set(ps.join(manager._type2path[t],r),i,a)}),ipc.on(`${ipcFlag}:remove`,(e,t,r,i)=>{data.remove(ps.join(manager._type2path[t],r),i)}),ipc.on(`${ipcFlag}:clear`,(e,t,r)=>{data.empty(ps.join(manager._type2path[t],r))}),ipc.on(`${ipcFlag}:reset`,(e,t,r)=>{data.load(ps.join(manager._type2path[t],r),!0)});