"use strict";const e=require("iconv-lite"),t=require("fire-path"),i=require("fire-fs"),r=require("del"),o=require("child_process").spawn,n=require("tree-kill"),s=require("async"),a=require("electron"),l=require("globby"),c=require("xxtea-node"),d=require("zlib"),{promisify:p}=require("util"),u=Editor.require("app://share/engine-utils"),f=require("../share/bundle-utils"),g=Editor.Profile.load("global://settings.json");let m=t.join(Editor.App.home,"logs/native.log"),E=g.get("show-console-log");let j,S,h,y,w,_,v,O,C,x,b,P,I,A,k,$,R,F,D=-1,N=-1,M="",T=Editor.url("unpack://utils/Python27/python");function L(){let e=Editor.Profile.load("local://settings.json");return!1!==e.get("use-global-engine-setting")&&(e=Editor.Profile.load("global://settings.json")),e.get("use-default-cpp-engine")?Editor.builtinCocosRoot:e.get("cpp-engine-path")}function K(e,i){var r;let n=W();if(n)return[n,r];e=[y].concat(e);try{if("darwin"===process.platform)r=o("sh",e,i);else{let n=e.indexOf("--env"),s="COCOS_PYTHON_HOME="+t.dirname(T);n>=0?n===e.length-1?e.push(s):e[n+1]+=";"+s:(e.push("--env"),e.push(s)),r=o(T,e,i)}}catch(e){n=e}return{error:n,child:r}}function W(){return h=L(),console.log("Cocos2dx root: "+h),-1!==h.indexOf(" ")?new Error(`Cocos2dx root [${h}] can't include space.`):(S=t.join(h,"tools/cocos2d-console/bin"),y="darwin"===process.platform?t.join(S,"cocos"):t.join(S,"cocos.py"),null)}function H(e,r){if(v=e.platform,!(I=e.template))return r&&r(new Error("Template is empty, please select a template.")),void 0;O=e.buildPath,C=e.dest,x=e.projectName||e.title||t.basename(e.project),b=e[v].packageName||"com.fireball."+x,P=e.debug,A=e.useDebugKeystore,k=A?Editor.url("unpack://static/build-templates/native/debug.keystore"):e.keystorePath,"win32"===process.platform&&(k=k.replace(/\\/g,"/")),$=A?123456:e.keystorePassword,R=A?"debug_keystore":e.keystoreAlias,F=A?123456:e.keystoreAliasPassword;let n=function(e){e=e||{},E=g.get("show-console-log");let r=W();if(r)return r;let o=e.ndkRoot||g.get("ndk-root"),n=e.androidSDKRoot||g.get("android-sdk-root");w={COCOS_FRAMEWORKS:t.join(h,"../"),COCOS_X_ROOT:h,COCOS_CONSOLE_ROOT:S,NDK_ROOT:o,ANDROID_SDK_ROOT:n},_="";for(let e in w)""!==_&&(_+=";"),_+=`${e}=${w[e]}`;function s(e,t){return t?i.existsSync(t)?null:new Error(`Can't find [${e}] path: ${t}`):new Error(`[${e}] is empty, please set [${e}] in Preferences.`)}if(console.log(`native environment string : ${_}`),r=s("Cocos Console Root",S))return r;if(!i.existsSync(y))return new Error(`Can't find Cocos Console Bin: ${y}`);if("android"===v||"android-instant"===v){if(r=s("NDK Root",o))return r;if(r=s("Android SDK Root",n))return r;if(!("win32"!==process.platform||process.env.JAVA_HOME&&i.existsSync(process.env.JAVA_HOME)))return new Error("Please make sure java is installed and JAVA_HOME is in your environment")}return null}(e);return n?(r&&r(n),void 0):(n=function(){if(-1===v.indexOf("android")||A)return null;if(!k)return new Error("Keystore Path is empty, please set Keystore path");if(!i.existsSync(k))return new Error(`Keystore Path [${k}] is not exists, please check Keystore path`);if(!$)return new Error("Keystore Password is empty, please set Keystore Password");if(!R)return new Error("Keystore Alias is empty, please set Keystore Alias");if(!F)return new Error("Keystore Alias Password is empty, please set Keystore Alias Password");return null}())?(r&&r(n),void 0):(s.series([e=>{if("win32"===process.platform)return e(),void 0;try{let t,i=o("python",["-V"]);i.stderr.on("data",function(e){let t=e.toString();"3"===(t=t.replace("Python ","").replace("\n",""))[0]?Editor.warn(`Checked Python Version [${t}], please use python 2.x.x version. Recommend [2.7.5] version`):Editor.log(`Checked Python Version [${t}]`)}),i.on("error",function(){t=new Error("Can't find python, please install python or check your environment")}),i.on("close",function(){e(t)})}catch(t){e(new Error("Can't find python, please install python or check your environment"))}},e=>{let t=K(["-v"]);if(t.error)return e(t.error);let i=t.child;i.stdout.on("data",function(e){j=e.toString()}),i.stderr.on("data",function(e){Editor.failed(e.toString())}),i.on("close",function(){e()}),i.on("error",function(t){e(t)})},e=>{let r=t.join(S,"../../../"),o=t.join(r,"version"),n=t.join(r,"cocos/cocos2d.cpp"),s=t.join(r,"frameworks/js-bindings/bindings/manual/ScriptingCore.h");if(i.existsSync(o))M=i.readFileSync(o,"utf8");else{let e=null,t=null;if(i.existsSync(n)?(e=n,t='.*return[ \t]+"(.*)";'):i.existsSync(s)&&(e=s,t='.*#define[ \t]+ENGINE_VERSION[ \t]+"(.*)"'),e){let r=i.readFileSync(e,"utf8").match(t);r&&(M=r[1])}}if(M){let e=M.match("([0-9]+)[.]([0-9]+)");e&&(D=parseInt(e[1]),N=parseInt(e[2]))}e()}],e=>{r&&r(e)}),void 0)}function B(e,r){let o=require("ini"),n=t.join(e,"cocos2d.ini");if(!i.existsSync(n))return Editor.failed(`Can't find ${n}`),null;let s=o.parse(i.readFileSync(n,"utf-8"));s.paths.templates||(s.paths.templates="../../../templates"),s.engineMode=s.global.cocos2d_x_mode,s.templatesPath=t.join(e,s.paths.templates);let a=t.join(s.templatesPath,"js-template-*");s.templates=[],l(a,(e,i)=>{i.forEach(e=>{e=t.normalize(e);let i=t.basename(e);i=i.replace("js-template-",""),s.templates.push(i)}),r&&r(s)})}const U=23;const V=26;function J(e){let t="utf-8",r=i.readFileSync(Editor.url("unpack://utils/locale-encoding.py"));try{let i;try{i="darwin"===process.platform?o("python",["-c",r]):o(T,["-c",r])}catch(t){return e&&e(t),void 0}i.stdout.on("data",function(e){let i=e.toString();i&&(t=i)}),i.stderr.on("data",function(e){Editor.failed(e.toString())}),i.on("close",function(){e&&e(null,t)}),i.on("error",function(t){e&&e(t)})}catch(i){Editor.log("Get locale encoding failed, use utf-8 encoding"),e&&e(null,t)}}function q(t,r,o){let n="utf-8",s={logFilePath:m,disableEditorLog:!E,useSystemEncoding:!0,prefix:""};function a(){let s;r.logFilePath&&(i.ensureFileSync(r.logFilePath),s=i.createWriteStream(r.logFilePath,{defaultEncoding:n})),t.stdout.on("data",t=>{if(s&&s.write(t),r.disableEditorLog)return;let i;(i="win32"===process.platform?e.decode(t,n):t.toString()).length>1&&(i=i.replace(/\n*$/g,"")),i.split("\n").forEach(e=>{r.prefix&&(e=r.prefix+" : "+e),Editor.log(e)})}),t.stderr.on("data",t=>{if(s&&s.write(t),r.disableEditorLog)return;let i;i="win32"===process.platform?e.decode(t,n):t.toString(),r.prefix&&(i=r.prefix+" : "+i),-1!==i.toLowerCase().indexOf("warning")?Editor.warn(i):Editor.failed(i)}),t.on("close",(e,i)=>{s&&s.close(),o.call(t,null,e,i)}),t.on("error",function(e){o.call(t,e)})}if("function"==typeof r?(o=r,r=s):r=Object.assign(s,r),r.useSystemEncoding)return J((e,t)=>{n=t,a()}),void 0;a()}function z(){if("binary"!==I)return null;let e=t.join(h,"prebuilt",v);return i.existsSync(e)?null:new Error(`Can't find prebuilt libs for platform [${v}]. Please compile prebuilt libs first`)}function G(e){if(-1===v.indexOf("android"))return;A&&(k=Editor.url("unpack://static/build-templates/native/debug.keystore")),"win32"===process.platform&&(k=k.replace(/\\/g,"/"));let r=t.join(C,"frameworks/runtime-src/proj.android-studio/gradle.properties");if(i.existsSync(r)){let o=i.readFileSync(r,"utf-8");o=(o=(o=(o=(o=(o=o.replace(/RELEASE_STORE_FILE=.*/,`RELEASE_STORE_FILE=${k}`)).replace(/RELEASE_STORE_PASSWORD=.*/,`RELEASE_STORE_PASSWORD=${$}`)).replace(/RELEASE_KEY_ALIAS=.*/,`RELEASE_KEY_ALIAS=${R}`)).replace(/RELEASE_KEY_PASSWORD=.*/,`RELEASE_KEY_PASSWORD=${F}`)).replace(/PROP_TARGET_SDK_VERSION=.*/,`PROP_TARGET_SDK_VERSION=${X(e.apiLevel)}`)).replace(/PROP_COMPILE_SDK_VERSION=.*/,`PROP_COMPILE_SDK_VERSION=${X(e.apiLevel)}`);let n=e.appABIs&&e.appABIs.length>0?e.appABIs.join(":"):"armeabi-v7a";o=o.replace(/PROP_APP_ABI=.*/g,`PROP_APP_ABI=${n}`),i.writeFileSync(r,o),o="",o+=`ndk.dir=${w.NDK_ROOT}\n`,o+=`sdk.dir=${w.ANDROID_SDK_ROOT}`,"win32"===process.platform&&(o=(o=o.replace(/\\/g,"\\\\")).replace(/:/g,"\\:")),i.writeFileSync(t.join(t.dirname(r),"local.properties"),o)}}function Z(){let e=t.join(C,".cocos-project.json");if(!i.existsSync(e))return Editor.error(`Can't find project json [${e}]`),void 0;let r=JSON.parse(i.readFileSync(e,"utf8")),o=r.projectName,n=r.packageName,s=o!==x,a=n!==b;if(!s&&!a)return;let l=t.join(C,"cocos-project-template.json");if(!i.existsSync(l))return Editor.error(`Can't find template json [${l}]`),void 0;let c,d=JSON.parse(i.readFileSync(l,"utf8")).do_add_native_support;a&&(c=(c=(c=d.project_replace_package_name.files).concat(d.project_replace_mac_bundleid.files)).concat(d.project_replace_ios_bundleid.files)).forEach(function(e){let r=t.join(C,e);if(!i.existsSync(r))return Editor.error(`Can't not find file [${e}], replace package name failed`),void 0;let o=i.readFileSync(r,"utf8");o=o.replace(new RegExp(n,"gm"),b),i.writeFileSync(r,o)}),s&&((c=d.project_replace_project_name.files).forEach(e=>{let r=t.join(C,e.replace("PROJECT_NAME",o));if(!i.existsSync(r))return Editor.error(`Can't not find file [${r}], replace project name failed`),void 0;let n=i.readFileSync(r,"utf8");n=n.replace(new RegExp(o,"gm"),x),i.writeFileSync(r,n)}),(c=d.project_rename.files).forEach(e=>{let r=t.join(C,e.replace("PROJECT_NAME",o));if(!i.existsSync(r))return Editor.error(`Can't not find file [${r}], replace project name failed`),void 0;let n=t.join(C,e.replace("PROJECT_NAME",x));i.renameSync(r,n)})),r.projectName=x,r.packageName=b,i.writeFileSync(e,JSON.stringify(r,null,2))}function Y(e,r){const o=require("plist");let n=t.join(C,"frameworks/runtime-src/proj.ios_mac/ios/Info.plist");if(i.existsSync(n)){let t=i.readFileSync(n,"utf8"),r=o.parse(t),s=[];e.landscapeRight&&s.push("UIInterfaceOrientationLandscapeRight"),e.landscapeLeft&&s.push("UIInterfaceOrientationLandscapeLeft"),e.portrait&&s.push("UIInterfaceOrientationPortrait"),e.upsideDown&&s.push("UIInterfaceOrientationPortraitUpsideDown"),r.UISupportedInterfaceOrientations=s,t=o.build(r),i.writeFileSync(n,t)}let s=[t.join(C,"frameworks/runtime-src/proj.android-studio/app/AndroidManifest.xml"),t.join(C,"frameworks/runtime-src/proj.android-studio/game/AndroidManifest.xml")].filter(e=>i.existsSync(e));for(let t=0,o=s.length;t<o;t++){let o=s[t],n=o.indexOf("proj.android-studio")>=0,a=/android:screenOrientation=\"[^"]*\"/,l='android:screenOrientation="unspecified"';if(e.landscapeRight&&e.landscapeLeft&&e.portrait&&e.upsideDown)l='android:screenOrientation="fullSensor"';else if(e.landscapeRight&&!e.landscapeLeft)l='android:screenOrientation="landscape"';else if(!e.landscapeRight&&e.landscapeLeft)l='android:screenOrientation="reverseLandscape"';else if(e.landscapeRight&&e.landscapeLeft)l='android:screenOrientation="sensorLandscape"';else if(e.portrait&&!e.upsideDown)l='android:screenOrientation="portrait"';else if(!e.portrait&&e.upsideDown){let e="reversePortrait";r<16&&!n&&(e="reversePortait"),l=`android:screenOrientation="${e}"`}else if(e.portrait&&e.upsideDown){let e="sensorPortrait";r<16&&!n&&(e="sensorPortait"),l=`android:screenOrientation="${e}"`}let c=i.readFileSync(o,"utf8");c=c.replace(a,l),i.writeFileSync(o,c)}}function X(e){let t=e.match("android-([0-9]+)$"),i=-1;return t&&(i=parseInt(t[1])),i}var Q=[["USE_VIDEO","VideoPlayer"],["USE_WEB_VIEW","WebView"],["USE_EDIT_BOX","EditBox"],["USE_AUDIO","Audio"],["USE_SPINE","Spine Skeleton"],["USE_DRAGONBONES","DragonBones"],["USE_SOCKET","Native Socket"]];function ee(e){let r=e.platform.toLowerCase();if("mac"===r){te("link"===e.template?t.join(L(),"cocos/platform/mac/CCModuleConfigMac.debug.xcconfig"):t.join(C,"frameworks/cocos2d-x/cocos/platform/mac/CCModuleConfigMac.debug.xcconfig"),e),te("link"===e.template?t.join(L(),"cocos/platform/mac/CCModuleConfigMac.release.xcconfig"):t.join(C,"frameworks/cocos2d-x/cocos/platform/mac/CCModuleConfigMac.release.xcconfig"),e)}else if("ios"===r){te("link"===e.template?t.join(L(),"cocos/platform/ios/CCModuleConfigIOS.debug.xcconfig"):t.join(C,"frameworks/cocos2d-x/cocos/platform/ios/CCModuleConfigIOS.debug.xcconfig"),e),te("link"===e.template?t.join(L(),"cocos/platform/ios/CCModuleConfigIOS.release.xcconfig"):t.join(C,"frameworks/cocos2d-x/cocos/platform/ios/CCModuleConfigIOS.release.xcconfig"),e)}else"android"===r||"android-instant"===r?function(e){let r=t.join(C,"frameworks/runtime-src/proj.android-studio/jni/CocosApplication.mk");if(!i.existsSync(r))return Editor.failed(`Can not find file ${r}`),void 0;let o=i.readFileSync(r,"utf8");Q.forEach(t=>{(function(t){let i=-1!==e.excludedModules.indexOf(t[1]);-1===o.indexOf(t[0])?o+=`${t[0]} := ${i?0:1}\n`:o=o.replace(new RegExp(`${t[0]}\\s*:=\\s*(0|1)`,"g"),`${t[0]} := ${i?0:1}`)})(t)}),i.writeFileSync(r,o)}(e):"win32"===r&&function(e){}()}function te(e,t){if(!i.existsSync(e))return Editor.failed(`Can not find file ${e}`),void 0;let r=i.readFileSync(e,"utf8");Q.forEach(e=>{(function(e){let i=-1!==t.excludedModules.indexOf(e[1]);r=-1===r.indexOf(e[0])?r.replace(/\$\(inherited\)/,t=>t+` ${e[0]}=${i?0:1}`):r.replace(new RegExp(`${e[0]}=(0|1)`),`${e[0]}=${i?0:1}`)})(e)}),i.writeFileSync(e,r)}function ie(e){if("mac"===v||"win32"===v){let r=t.join(e.dest,"frameworks/runtime-src/Classes/NativeConfig.h");if(!i.existsSync(r))return Editor.error("can not find NativeConfig.h at path",r),void 0;let o=i.readFileSync(r,"utf8");"mac"===v?o=(o=o.replace(/MACOS_WIN_SIZE_WIDTH \s*[0-9]+/,"MACOS_WIN_SIZE_WIDTH "+e.mac.width)).replace(/MACOS_WIN_SIZE_HEIGHT \s*[0-9]+/,"MACOS_WIN_SIZE_HEIGHT "+e.mac.height):"win32"===v&&(o=(o=o.replace(/WINDOWS_WIN_SIZE_WIDTH \s*[0-9]+/,"WINDOWS_WIN_SIZE_WIDTH "+e.win32.width)).replace(/WINDOWS_WIN_SIZE_HEIGHT \s*[0-9]+/,"WINDOWS_WIN_SIZE_HEIGHT "+e.win32.height)),i.writeFileSync(r,o,"utf8")}}let re,oe,ne,se,ae;function le(){re&&(oe=!0,n(re.pid,"SIGTERM",()=>{oe=!1}),re=null)}function ce(e){let r=!1;if("ios"===v){r=i.readdirSync(t.join(e.dest,"frameworks/runtime-src/proj.ios_mac/")).some(e=>e.endsWith(".xcworkspace"))}return r}function de(e){Editor.log("Begin generate Android App Bundle...");let r="android-instant"===v,n=r?":game:bundle":"bundle",s=t.join(C,"frameworks/runtime-src/proj.android-studio"),a="win32"===process.platform?".\\gradlew.bat":"./gradlew";o(a,[`${n}${P?"Debug":"Release"}`],{cwd:s}).on("close",o=>{if(0===o){let e=t.join(s,`app/build/outputs/bundle/${P?"debug":"release"}/${x}.aab`);r&&(e=t.join(s,`game/build/outputs/bundle/${P?"debugFeature":"releaseFeature"}/game.aab`)),i.copySync(e,t.join(C,P?"simulator":"publish","android",`${x}-${P?"debug":"release"}.aab`))}else Editor.warn("generate Android App Bundle fail");e&&e()})}function pe(){ne&&(n(ne.pid),ne=null)}function ue(){se&&(n(se.pid),se=null,Editor.Panel.close("simulator-debugger"))}module.exports={build:function(e,o){H(e,n=>{if(n=n||z())return o&&o(n),void 0;let s=X(e.apiLevel);if(s=s>0?s:U,!i.existsSync(C)){Editor.log("Creating native cocos project to ",C);let a="tempCocosProject",l=t.join(O,a);if(i.existsSync(l))try{r.sync(l,{force:!0})}catch(n){return o&&o(n),void 0}Editor.Ipc.sendToMain("builder:state-changed","creating native project",.05);let c=K(["new",a,"-l","js","-d",O,"-t",I,"--env",_]);return c.error?(o&&o(c.error),void 0):(q(c.child,(n,c)=>n?(o&&o(n),void 0):0!==c?(o&&o(new Error("Failed to create project with exitCode : "+c)),void 0):(i.rename(l,C,n=>{if(n)return o&&o(n),void 0;B(S,n=>{let l=t.join(n.templatesPath,"js-template-"+I),c=t.join(l,"cocos-project-template.json"),d=t.join(C,"cocos-project-template.json");i.copySync(c,d);try{(function(e,r){let o=t.join(C,".cocos-project.json"),n=JSON.parse(i.readFileSync(o,"utf8"));n.projectName=e,n.packageName=r,i.writeFileSync(o,JSON.stringify(n,null,2))})(a,"org.cocos2dx."+a),void("win32"!==process.platform&&[t.join(C,"frameworks/runtime-src/proj.android-studio/app/jni/Application.mk")].forEach(e=>{let t=i.readFileSync(e,"utf8").split("\n");for(let e=0;e<t.length;e++){let i=t[e];i.match(/\bAPP_SHORT_COMMANDS\b.*:=.*true/)&&(t[e]="#"+i)}i.writeFileSync(e,t.join("\n"))})),Z(),function(){if("android-instant"!==I){let e=t.join(C,`frameworks/runtime-src/proj.ios_mac/${x}.xcodeproj/project.pbxproj`);if(i.existsSync(e)){let r=i.readFileSync(e,"utf8");r=r.replace(/\/Applications\/CocosCreator.app\/Contents\/Resources\/cocos2d-x/g,t.resolve(h)),i.writeFileSync(e,r)}else Editor.warn(`Can't find path [${e}]. Replacing project file failed`)}let e=[t.join(C,"frameworks/runtime-src/proj.android-studio/build-cfg.json"),t.join(C,"frameworks/runtime-src/proj.android-studio/settings.gradle"),t.join(C,"frameworks/runtime-src/proj.android-studio/app/build.gradle"),t.join(C,"frameworks/runtime-src/proj.android-studio/game/build.gradle")];"android-instant"!==I&&(e.push(t.join(C,"frameworks/runtime-src/proj.win32/build-cfg.json")),e.push(t.join(C,`frameworks/runtime-src/proj.win32/${x}.vcxproj`)),e.push(t.join(C,`frameworks/runtime-src/proj.win32/${x}.sln`))),"link"===I&&(e.push(t.join(C,"frameworks/runtime-src/proj.ios_mac/ios/UserConfigIOS.debug.xcconfig")),e.push(t.join(C,"frameworks/runtime-src/proj.ios_mac/ios/UserConfigIOS.release.xcconfig")),e.push(t.join(C,"frameworks/runtime-src/proj.ios_mac/mac/UserConfigMac.debug.xcconfig")),e.push(t.join(C,"frameworks/runtime-src/proj.ios_mac/mac/UserConfigMac.release.xcconfig"))),e.forEach(e=>{if(!i.existsSync(e))return Editor.warn(`Replace file [${e}] not find.`),void 0;let r=i.readFileSync(e,"utf8"),o=t.resolve(h),n=t.basename(e);"build-cfg.json"!==n&&"settings.gradle"!==n&&"build.gradle"!==n||(o=o.replace(/\\/g,"/")),r=(r=r.replace(/\$\{COCOS_X_ROOT\}/g,o)).replace(/\$\(COCOS_X_ROOT\)/g,o),i.writeFileSync(e,r)})}(),function(){try{r.sync(t.join(C,"asset"),{force:!0}),r.sync(t.join(C,"src"),{force:!0})}catch(e){Editor.error(e)}}(),G(e),Y(e.orientation,s),ee(e),ie(e)}catch(e){return o&&o(e),void 0}o&&o()})}),void 0)),void 0)}try{Z(),G(e),Y(e.orientation,s),function(){let e=t.join(C,".cocos-project.json");if(!i.existsSync(e))return Editor.failed(`Can't find project json [${e}]`),void 0;let r=JSON.parse(i.readFileSync(e,"utf8")).engine_version;r!==M&&Editor.failed(`Project version [${r}] not match cocos2d-x-lite version [${M}]. Please delete your build path, then rebuild project.`)}(),ee(e),ie(e)}catch(n){return o&&o(n),void 0}o&&o()})},compile:function(e,t){Editor.Ipc.sendToMain("builder:state-changed","init settings",0),H(e,r=>{if(r=r||z())return t&&t(r),void 0;if(!i.existsSync(C))return t&&t(new Error(`Can't find ${C}, please first build project`)),void 0;Editor.Ipc.sendToMain("builder:state-changed","compile native",.1),Editor.log("Start to compile native project. Please wait..."),Editor.log(`The log file path [ ${m} ]`);let o=["compile","-p","android-instant"===v?"android":v,"-m",P?"debug":"release","--compile-script",0,"--env",_],n={cwd:C};"android-instant"===v&&o.push("--instant-game"),ce(e)&&o.push("--xcworkspace");let s=U;if("android"===v||"android-instant"===v){if(o.push("--android-studio"),e.apiLevel){let t=X(e.apiLevel);t>0&&(o.push("--ap"),o.push(e.apiLevel),s=t)}e.appABIs&&e.appABIs.length>0&&(o.push("--app-abi"),o.push(e.appABIs.join(":")))}if("win32"===v){let t="";t="auto"===e.vsVersion?"2015":e.vsVersion,o.push("--vs"),o.push(t)}Y(e.orientation,s);let a=K(o,n);if(a.error)return t&&t(a.error),void 0;let l=.1;function c(){(l+=5e-4)>.9&&(l=.9),Editor.Ipc.sendToMain("builder:state-changed","compile native",l)}(re=a.child).stdout.on("data",()=>{c()}),re.stderr.on("data",()=>{c()}),q(re,async(i,r,o)=>{if(i)return t&&t(i),void 0;if(re=null,0===r)!e.appBundle||"android-instant"!==v&&"android"!==v||await p(de)(),Editor.Ipc.sendToMain("builder:state-changed","finish",1),Editor.log("Compile native project successfully.");else{if(!oe&&"SIGTERM"!==o)return t&&t(new Error(`Compile failed. The log file path [ ${m} ]`)),void 0;Editor.log("Compile native project exited normal")}t&&t()})})},encryptJsFiles:function(e,o,n){H(e,s=>{if(s)return n&&n(s),void 0;if(!i.existsSync(C))return n&&n(new Error(`Can't find ${C}, please first build project`)),void 0;if(!e.xxteaKey)return n&&n(new Error("xxtea key is empty.")),void 0;(function(e){let r=t.join(C,"frameworks/runtime-src/Classes/AppDelegate.cpp");if(!i.existsSync(r))return Editor.warn(`Can't find path [${r}]`),void 0;let o=i.readFileSync(r,"utf8").split("\n");for(let t=0;t<o.length;t++)-1!==o[t].indexOf("jsb_set_xxtea_key")&&(o[t]=`    jsb_set_xxtea_key("${e.xxteaKey}");`);i.writeFileSync(r,o.join("\n"))})(e);let a=[t.join(C,"src","**/*.js")].concat(o.map(e=>t.join(e,"**/*.js")));l(a,(o,s)=>{if(o)return n&&n(o),void 0;s.forEach(o=>{o=t.normalize(o);try{let n=i.readFileSync(o,"utf8");e.zipCompressJs?(n=d.gzipSync(n),n=c.encrypt(n,c.toBytes(e.xxteaKey))):n=c.encrypt(c.toBytes(n),c.toBytes(e.xxteaKey)),i.writeFileSync(t.join(t.dirname(o),t.basenameNoExt(o))+".jsc",n),r.sync(o,{force:!0})}catch(e){Editor.warn(e)}}),n&&n()})})},run:function(e,r){pe(),Editor.log("Start to run project"),H(e,n=>{if(n)return r&&r(n),void 0;if(!i.existsSync(C))return r&&r(new Error(`Can't find ${C}, please first build project`)),void 0;Editor.log("Start to run project. Please wait..."),Editor.log(`The log file path [ ${m} ]`);let s=["run","-p","android-instant"===v?"android":v,"-m",P?"debug":"release","--env",_,"--compile-script",0],a={cwd:C};if("android-instant"===v){let t=e["android-instant"];s.push("--instant-game"),t.scheme&&t.host&&t.pathPattern&&(s.push("--launch-url"),s.push(`${t.scheme}://${t.host}${t.pathPattern}`))}ce(e)&&s.push("--xcworkspace");let l=U;if("android"===v||"android-instant"===v){if(s.push("--android-studio"),e.apiLevel){let t=X(e.apiLevel);t>0&&(s.push("--ap"),s.push(e.apiLevel),l=t)}e.appABIs&&e.appABIs.length>0&&(s.push("--app-abi"),s.push(e.appABIs.join(":")))}if("win32"===v&&"auto"!==e.vsVersion&&(s.push("--vs"),s.push(e.vsVersion)),Y(e.orientation,l),"win32"===process.platform&&"win32"===v){let e;e=P?t.join(C,"simulator/win32",x+".exe"):t.join(C,"publish/win32",x+".exe");try{ne=o(e,{},a)}catch(n){return r&&r(n),void 0}}else{let e=K(s,a);if(e.error)return r&&r(e.error),void 0;ne=e.child}q(ne,(e,t)=>e?(r&&r(e),void 0):0!==t?(r&&r(new Error(`Failed to run project. The log file path [ ${m} ]`)),void 0):(r&&r(),void 0))})},runSimulator:function(n){ue(),function(){try{let e=Editor.Profile.load("local://settings.json");e.get("use-global-engine-setting")&&(e=Editor.Profile.load("global://settings.json"));let r=e.get("use-default-cpp-engine")?void 0:e.get("cpp-engine-path"),o=u.getSimulatorConfigAt(r),n=o.init_cfg;const s=Editor.Profile.load("project://project.json");if(s.get("use-project-simulator-setting")){let e=s.get("simulator-resolution");n.width=e.width,n.height=e.height,n.isLandscape=s.get("simulator-orientation")}else{let t=e.get("simulator-resolution"),i=o.simulator_screen_size[t]||e.get("simulator-customsize-resolution");n.width=i.width,n.height=i.height,n.isLandscape=e.get("simulator-orientation")}let a=u.getSimulatorConfigPath(r);i.existsSync(t.dirname(a))&&i.writeJsonSync(a,o,"utf-8")}catch(e){Editor.error(e)}}();let a,l,c,d=Editor.Profile.load("global://settings.json");d&&d.get("simulator-debugger")&&Editor.Panel.open("simulator-debugger");let p=Editor.url("unpack://static/simulator/"),g="utf-8";"darwin"===process.platform?(c=Editor.url("unpack://simulator/mac/Simulator.app"),a=t.join(c,"Contents/MacOS/Simulator"),l=t.join(c,"Contents/Resources")):"win32"===process.platform&&(c=Editor.url("unpack://simulator/win32"),a=t.join(c,"Simulator.exe"),l=c);let m=Editor.url("unpack://engine/bin");[{src:t.join(m,"cocos2d-jsb-for-preview.js"),dst:t.join(l,"src/cocos2d-jsb.js")},{src:t.join(p,"asset-record-pipe.js"),dst:t.join(l,"src/asset-record-pipe.js")},{src:t.join(p,"simulator-config.js"),dst:t.join(l,"src/simulator-config.js")},{src:Editor.url("packages://jsb-adapter/bin"),dst:t.join(l,"jsb-adapter")}].forEach(e=>{i.copySync(e.src,e.dst)}),r.sync(t.join(l,"assets"),{force:!0}),r.sync(t.join(l,"gamecaches"),{force:!0}),s.series([e=>{if(n){i.ensureDirSync(n.recordPath),i.emptyDirSync(n.recordPath),"win32"===process.platform&&(n.recordPath=n.recordPath.replace(/\\/g,"/"));let e=i.readFileSync(t.join(p,"simulator-config.js"),"utf-8");e=(e=e.replace(/CC_SIMULATOR_RECORD_MODE\s=\sfalse/g,"CC_SIMULATOR_RECORD_MODE = true")).replace(/CC_SIMULATOR_RECORD_PATH\s=\s""/g,`CC_SIMULATOR_RECORD_PATH = "${n.recordPath}"`),i.writeFileSync(t.join(l,"src/simulator-config.js"),e)}e()},e=>{let r=i.readFileSync(t.join(p,"main.js"),"utf-8"),o=t.join(Editor.Project.path,"library/imports"),n=Editor.Project.path,s=Editor.ProjectCompiler.DEST_PATH;"win32"===process.platform&&(o=o.replace(/\\/g,"/"),n=n.replace(/\\/g,"/"),s=s.replace(/\\/g,"/")),r=(r=(r=(r=r.replace(/{importPath}/g,`'${o}/'`)).replace(/{nativePath}/g,`'${o}/'`)).replace(/{scriptPath}/g,`'${n}/'`)).replace(/{tempScriptsPath}/g,`'${s}/'`);let a=u.getSimulatorConfigAt();a&&a.init_cfg.waitForConnect&&(r="debugger\n"+r),i.writeFileSync(t.join(l,"main.js"),r),e()},e=>{var r=Editor.isWin32?"win32":"mac";Editor.PreviewServer.query("settings.js",r,(r,o)=>{if(r)return e(r),void 0;i.writeFileSync(t.join(l,"src/settings.js"),o),e()})},async e=>{let r=await f.queryBundleFolders();r.push({name:"main"}),s.eachSeries(r,(e,r)=>{i.outputFileSync(t.join(l,`assets/${e.name}/index.js`)," "),Editor.PreviewServer.query(`${e.name}/config.json`,Editor.isWin32?"win32":"mac",(o,n)=>{if(o)return r(o),void 0;i.outputFileSync(t.join(l,`assets/${e.name}/config.json`),n),r()})},t=>{e(t)})},e=>{let r=t.join(l,"preview-scene.json");Editor.PreviewServer.getPreviewScene(function(t){e(t)},function(t){i.writeFile(r,t,e)},function(t){i.copy(t,r,e)})},e=>{J((t,i)=>{g=i,e(t)})}],t=>{if(t)return Editor.failed(t),void 0;let i=["-workdir",l,"-writable-path",l,"-console","false","--env",_];try{se=o(a,i)}catch(t){return Editor.error(t),void 0}let r=(e,t)=>{if(e)return Editor.error(e),void 0;0===t&&(se=null)};se.stderr.on("data",t=>{let i;(i="win32"===process.platform?e.decode(t,g):t.toString()).length>1&&(i=i.replace(/\n*$/g,""));let r="error";-1!==i.toLowerCase().indexOf("warning")&&(r="warn"),Editor.Ipc.sendToPanel("scene","scene:print-simulator-log",i,r)}),se.stdout.on("data",t=>{let i;(i="win32"===process.platform?e.decode(t,g):t.toString()).length>1&&(i=i.replace(/\n*$/g,"")),i.split("\n").forEach(e=>{Editor.Ipc.sendToPanel("scene","scene:print-simulator-log",e)})}),se.on("close",(e,t)=>{r.call(se,null,e,t),Editor.Panel.close("simulator-debugger")}),se.on("error",function(e){r.call(se,e),Editor.Panel.close("simulator-debugger")})})},saveKeystore:function(e,n){let s="keytool";if("win32"===process.platform){if(!process.env.JAVA_HOME||!i.existsSync(process.env.JAVA_HOME))return n&&n(new Error("Please make sure java is installed and JAVA_HOME is in your environment")),void 0;if(s=t.join(process.env.JAVA_HOME,"bin/keytool.exe"),!i.existsSync(s))return n&&n(new Error(`Can't find path [${s}]. Please make sure JAVA_HOME is in your environment and exists`)),void 0}let a=e.dest;i.existsSync(a)&&r.sync(a,{force:!0});let l=[];e.commonName&&l.push(`CN=${e.commonName}`),e.organizationalUnit&&l.push(`OU=${e.organizationalUnit}`),e.organization&&l.push(`O=${e.organization}`),e.locality&&l.push(`L=${e.locality}`),e.state&&l.push(`S=${e.state}`),e.country&&l.push(`C=${e.country}`),l=l.join(",");let c=["-genkey","-keyalg","RSA","-keysize","1024","-validity",e.validity,"-keystore",t.basename(a),"-storepass",e.password,"-alias",e.alias,"-keypass",e.aliasPassword,"-dname",l];Editor.log("Creating keystore : ",c.join(" "));let d,p={cwd:t.dirname(a)};try{d=o(s,c,p)}catch(e){return n&&n(e),void 0}q(d,(e,t)=>e?(n&&n(e),void 0):0!==t?(n&&n(new Error("Failed to create keystore, please check the log information")),void 0):(n(),void 0))},openNativeLogFile:function(){i.ensureFileSync(m),a.shell.openItem(m)},stopCompile:le,getCocosTemplates:function(e){let i=Editor.Profile.load("local://settings.json");!1!==i.get("use-global-engine-setting")&&(i=Editor.Profile.load("global://settings.json")),i.get("use-default-cpp-engine")?(h=Editor.builtinCocosRoot,Editor.dev&&!h&&Editor.error("Can not find builtin cocos2d-x, please run 'gulp update-externs'.")):(h=i.get("cpp-engine-path"))||Editor.error("Can not find cocos engine."),B(t.join(h,"tools","cocos2d-console","bin"),t=>{e&&e(null,t.templates)})},getAndroidAPILevels:function(e){let r=g.get("android-sdk-root");if(!i.isDirSync(r))return e(null,[]),void 0;let o=t.join(r,"platforms","android-*");l(o,(r,o)=>{let n=[];o.forEach(e=>{e=t.normalize(e);let r=t.basename(e);X(r)>=U&&i.isDirSync(e)&&n.push(r)}),e&&e(null,n)})},getAndroidInstantAPILevels:function(e){let r=g.get("android-sdk-root");if(!i.isDirSync(r))return e(null,[]),void 0;let o=t.join(r,"platforms","android-*");l(o,(r,o)=>{let n=[];o.forEach(e=>{e=t.normalize(e);let r=t.basename(e);X(r)>=V&&i.isDirSync(e)&&n.push(r)}),e&&e(null,n)})},stop:function(){le(),pe(),ue(),ae&&(n(ae.pid),ae=null)},showLogInConsole:E,getCocosSpawnProcess:K,getCocosRoot:L};