let e=require("./jszip.min.js"),t=require("path"),i=require("fs-extra"),a=require("./worker-util.js"),r=require("./adapter-util.js"),o=require("./tinypack-util.js"),n=require("./subpackage-util.js"),s={};e.prototype.directory=function(e,a){if(!i.statSync(e).isDirectory())return Editor.error(e+" is not a folder!"),void 0;i.readdirSync(e).forEach(function(e){let a=this.zip,r=t.join(this.srcPath,e),o=i.statSync(r);o.isDirectory()?a.directory(r,e):o.isFile()?a.file(e,i.readFileSync(r)):Editor.error(r+" was not added to zip!")}.bind({srcPath:e,zip:this.folder(a)}))},e.prototype.append=function(e,t){if(!i.statSync(e).isFile())return Editor.error(e+" is not a file!"),void 0;this.file(t,i.readFileSync(e))},module.exports={async gatherInfo(c,p){if(s.customConfig=Editor.Profile.load("project://link-sure-runtime.json").getSelfData(),!1===this.checkData(s,c,p))return!1;s.md5Cache=p.md5Cache;let u=s.customConfig;s.isTinyPackage=""!==u.tinyPackageServer,s.projectPath=p.project,s.buildPath=p.dest,s.options=p,s.title=p.title,s.cpkName=p.title+".cpk";let d=u.outputCpkPath,l=u.useCustomCpkPath;return s.buildResults=p.buildResults,s.startScene=p.startScene,!0===l?""!==d&&i.existsSync(d)?s.cpkPath=t.join(d,s.cpkName):(Editor.log(Editor.T("link-sure-runtime.out_cpk_path_error")),s.cpkPath=t.join(s.buildPath,s.cpkName)):s.cpkPath=t.join(s.buildPath,s.cpkName),s.gameConfig={},s.JsZip=e,s.cpk=new e,await a.gatherInfo(s),await r.gatherInfo(s),await o.gatherInfo(s),await n.gatherInfo(s),!0},checkData:(e,a,r)=>(0,i.existsSync(t.join(r.dest,"remote"))&&""===e.customConfig.tinyPackageServer&&Editor.warn(Editor.T("link-sure-runtime.had_set_remote_without_tiny_mode")),!0),async organizeResources(e){let o=s.buildPath;return await a.organizeResources(),!1!==await r.organizeResources(e)&&(await n.organizeResources(),i.writeJSONSync(t.join(o,"game.config.json"),s.gameConfig),this.handleMainJS(),!0)},handleMainJS(){var e=t.join(s.buildPath,"main.js");let a=Editor.url("packages://runtime-adapters/platforms/cocos-play/res/main.js");i.copySync(a,e)},async pack(){let e=s.cpk,c=s.cpkPath,p=s.buildPath;i.existsSync(c)&&i.unlinkSync(c);let u=i.createWriteStream(c);await a.pack(),await r.pack(),await o.pack(),await n.pack(),e.directory(t.join(p,"src"),"src"),e.directory(t.join(p,"assets"),"assets"),e.append(t.join(p,"main.js"),"main.js"),e.append(t.join(p,"game.config.json"),"game.config.json"),e.generateNodeStream({type:"nodebuffer",base64:!1,compression:"DEFLATE"}).pipe(u).on("finish",function(){o.packFinished()})}};