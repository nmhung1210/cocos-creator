"use strict";const{download:o,install:t,unzip:e,remove:r,getList:i}=require("./lib/store");exports.messages={open(){Editor.Panel.open("store")},async download(t,e){try{await o(e)}catch(o){Editor.error(o),Editor.Dialog.messageBox({title:Editor.T("store.dialog.download_error"),message:o.message,buttons:[Editor.T("store.button.confirm")],defaultId:0,cancelId:0})}},async unzip(o,t,r){try{await e(t,r)}catch(o){Editor.error(o),Editor.Dialog.messageBox({title:Editor.T("store.dialog.zip_error"),message:o.message,buttons:[Editor.T("store.button.confirm")],defaultId:0,cancelId:0})}},async install(o,e,r){try{await t(e,r)}catch(o){Editor.error(o),Editor.Dialog.messageBox({title:Editor.T("store.dialog.install_error"),message:o.message,buttons:[Editor.T("store.button.confirm")],defaultId:0,cancelId:0})}},remove(o,t,e){r(t,e)},clear(o){i().map(o=>({production_id:o.production_id,version_id:o.version_id})).forEach(o=>{r(o.production_id,o.version_id)})},"query-download-list"(o){o.reply(null,i())},"app:sign-out"(){Editor.Panel.close("store")}},exports.load=function(){},exports.unload=function(){};