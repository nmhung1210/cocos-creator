(()=>{"use strict";return{dependencies:["packages://inspector/share/meta-header.js"],template:'\n        <cc-meta-header\n          :target="target"\n          icon="unpack://static/icon/assets/mesh.png"\n        ></cc-meta-header>\n  \n        <div class="props flex-1">\n          <ui-prop name="verts" type="number" \n            v-value="target.verts" \n            v-values="target.multiValues.verts"\n            :multi-values="multi"\n            readonly\n          ></ui-prop>\n          <ui-prop name="tris" type="number" \n            v-value="target.tris"\n            v-values="target.multiValues.tris"\n            :multi-values="multi" \n            readonly\n          ></ui-prop>\n          <ui-prop name="submeshes" type="number" \n            v-value="target.submeshes"\n            v-values="target.multiValues.submeshes"\n            :multi-values="multi" \n            readonly\n          ></ui-prop>\n          <ui-prop name="minPos" type="cc.Vec3" \n            v-value="target.minPos"\n            v-values="target.multiValues.minPos"\n            :multi-values="multi" \n            readonly\n          ></ui-prop>\n          <ui-prop name="maxPos" type="cc.Vec3" readonly\n            v-value="target.maxPos"\n            v-values="target.multiValues.maxPos"\n            :multi-values="multi" \n          ></ui-prop>\n          \n          <ui-section>\n            <div class="header">Attributes</div>\n\n            <div style="padding: 10px;border: 1px dashed rgba(255,255,255,0.4);margin-top:10px;">\n              <div v-for="(index, attributes) in target.attributes">\n                <div> Submesh {{index}}</div>\n                <div style="padding: 10px;border: 1px dashed rgba(255,255,255,0.2);">\n                  <div v-for="attribute in attributes">\n                    {{attribute}}\n                  <div>\n                </div>\n              </div>\n            </div>\n          </ui-section>\n        </div>\n      '}})();