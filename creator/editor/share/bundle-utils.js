const{promisify:e}=require("util"),r=require("fire-path"),s=require("fs"),t=require("jszip"),n=require("del");module.exports={_getAssetDB:()=>Editor.assetdb.queryMetas?Editor.assetdb:Editor.remote.assetdb,async queryBundleFolders(){let s=this._getAssetDB(),t=e(s.queryMetas.bind(s)),n=[];return(await t("db://**/*","folder")).forEach(e=>{let t=s.uuidToUrl(e.uuid);if(e.isBundle||"db://assets/resources"===t){let s=Object.assign({},e);s.name=e.bundleName||r.basenameNoExt(t),s.url=t,"db://assets/resources"===t&&(s.priority=8),n.push(s)}}),n},async queryBundlesWithScenes(){let s={},t=this._getAssetDB(),n=e(t.queryMetas).bind(t),i=await this.queryBundleFolders(),a=await n("db://**/*","scene"),l=[];return(a=a.map(e=>{let r=Object.assign({},e);return r.url=t.uuidToUrl(r.uuid),r})).forEach(e=>{let t=i.find(s=>r.contains(s.url,e.url));if(t){let r=t.name;(s[r]=s[r]||[]).push(e)}else l.push(e)}),s.main=l,s},verifyBundleFolders(e){for(let s=0;s<e.length-1;++s)for(let t=s+1;t<e.length;++t){let n=e[s],i=e[t];if(r.contains(n.url,i.url))throw new Error(`Cannot put asset bundle "${i.name}" in asset bundle "${n.name}"`);if(r.contains(i.url,n.url))throw new Error(`Cannot put asset bundle "${n.name}" in asset bundle "${i.name}"`);if(n.name===i.name)throw new Error(`asset bundle "${n.url}" and asset bundle "${i.url}" have same name!`)}},_getFilesInDirectory(e,t){s.readdirSync(t).forEach(n=>{let i=r.join(t,n);s.statSync(i).isDirectory()?this._getFilesInDirectory(e,i):e.push(i)})},async compressDirs(e,i,a){await new Promise(l=>{let u=new t,o=[],d=[];e.forEach(e=>{this._getFilesInDirectory(o,e),d.push(e,r.join(e,"**/*"))}),o.forEach(e=>{let t=r.relative(i,e),n=r.join("res",t);n=n.replace(/\\/g,"/"),u.file(n,s.readFileSync(e))}),u.generateAsync({type:"nodebuffer",compression:"DEFLATE",compressionOptions:{level:9}}).then(e=>{s.writeFileSync(a,e),n(d,{force:!0}).then(l)})})}};