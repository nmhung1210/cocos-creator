const t=require("fire-path"),e=require("fire-fs"),i=require("globby"),r=require("lodash"),s=require("del"),o=require("convert-source-map"),a=require("./index.js"),{formatPath:c,isNodeModulePath:n}=require("./utils"),l=require("./plugins/module"),p=require("./plugins/insert-globals"),h=t.join(Editor.Project.path,"temp/quick-scripts"),d=t.join(h,"src"),u=t.join(h,"dst"),m=t.join(Editor.Project.path,"library/imports"),w=t.join(d,"__qc_index__.js");let y=!0;if(!("undefined"==typeof Editor)){const t=Editor.Profile.load("global://features.json");y=void 0===(y=t.get("bundle-quick-compiler-project"))||y}function f(){Editor.Ipc.sendToWins("scene:soft-reload",!0)}f=r.debounce(f,300);let b={name2PathMap:{},dst2ImportMap:{},errorScripts:{},DEST_PATH:u,INDEX_FILE_PATH:w,async init(){console.time("Init project script"),function(){try{s.sync(h,{force:!0})}catch(t){Editor.error(t)}}(),this.copyAllImportsToSrc(),this.rebuildIndex(),await this.createCompiler(),console.timeEnd("Init project script")},async removeScripts(t){t.forEach(t=>{let e=t.path,i=t.uuid;if(!this.isPlugin(i)){let t=this.raw2src(e);s.sync(t,{force:!0});let i=this.raw2dest(e);s.sync(i,{force:!0}),this.compiler.removeCachedScripts(t)}this.singleScriptCompileSuccess(i)}),await this.rebuild()},async moveScripts(t,i){let r=[];for(let o=0;o<i.length;o++){let a=i[o],c=Editor.assetdb.fspathToUuid(a);if(!this.isPlugin(c)){let i=t[o],c=this.raw2src(i);s.sync(c,{force:!0});let n=this.raw2dest(i);s.sync(n,{force:!0}),this.compiler.removeCachedScripts(c),c=this.raw2src(a);let l=this.raw2import(a);e.copySync(l,c),r.push(c)}}await this.rebuild(r)},async compileScripts(t){let i=[];t.forEach(t=>{let r=Editor.assetdb.fspathToUuid(t);if(this.singleScriptCompileSuccess(r),!this.isPlugin(r)){let r=this.raw2src(t),s=this.raw2import(t);e.copySync(s,r),i.push(r)}}),await this.rebuild(i)},singleScriptCompileFailed(t){let e=this.errorScripts[t.uuid];e||(e=this.errorScripts[t.uuid]=[]),e.push(t.error.toString())},singleScriptCompileSuccess(t){let e=this.errorScripts[t];e&&(e.forEach(t=>{Editor.clearLog(t)}),delete this.errorScripts[t])},async createCompiler(){this.compiler=new a;let i=this,r={root:d,entries:w,out:u,plugins:[{transform(t,r){let s=i.dest2import(t.dst)+".map";if(e.existsSync(s)){let i=e.readJsonSync(s),r=o.fromObject(i).toComment();t.source=t.source+"\n"+r}},resolve(t,e){if(!/^[\w- .]*$/.test(t))return;let r=t.replace(/\.(?:js|ts|json)$/i,""),s=i.name2PathMap[r.toLowerCase()];return!n(e.filename)&&s?s:void 0},onResolve(e,r,s){let o=c(r),a=c(i.src2dst(o));i.dst2ImportMap[a]||n(a)||function(t){return c(t)===c(w)}(o)||Editor.warn(`Path case maybe wrong : '${e}' in '${t.relative(d,s)}'`)},async compileFinished(){f()}},p(),l({bundle:y,modularName:"project",requireInNodeEnv:"cc.require",prefix:"preview-scripts"})],clear:!1,onlyRecordChanged:!0};await this.compiler.build(r)},getAssetDb:()=>Editor.isMainProcess?Editor.assetdb:Editor.remote.assetdb,async compileAndReload(){this.copyAllImportsToSrc(),await this.rebuild()},async rebuild(t){this.rebuildIndex(),t?await this.compiler.compileScripts(t.concat(w)):await this.compiler.rebuild()},rebuildIndex(){let s="\n";this.name2PathMap={},this.dst2ImportMap={};let o=i.sync(t.join(m,"/**/*.js"));(o=r.sortBy(o,this.import2raw.bind(this))).forEach(e=>{let i=this.import2raw(e),r=this.raw2Relative(i);s+=`require('./${c(t.stripExt(r))}');\n`;let o=c(this.raw2dest(i)),a=c(this.raw2src(i)),n=t.basenameNoExt(o).toLowerCase();this.name2PathMap[n]=a,this.dst2ImportMap[o]=e}),e.ensureFileSync(w),e.writeFileSync(w,s)},copyAllImportsToSrc(){i.sync(t.join(m,"/**/*.js")).forEach(t=>{let i=this.import2src(t);e.copySync(t,i),e.copySync(t+".map",i+".map")})},import2raw(e){let i=t.basenameNoExt(e);if(!this.isPlugin(i))return this.getAssetDb().uuidToFspath(i)},import2dest(t){let e=this.import2raw(t);return this.raw2dest(e)},import2src(t){let e=this.import2raw(t);return this.raw2src(e)},import2relative(t){let e=this.import2raw(t);return this.raw2Relative(e)},raw2import:t=>Editor.assetdb._fspathToImportPathNoExt(t)+".js",raw2dest(e){let i=this.raw2Relative(e),r=t.join(u,i);return r=t.stripExt(r)+".js"},raw2src(e){let i=this.raw2Relative(e),r=t.join(d,i);return r=t.stripExt(r)+".js"},src2dst:e=>t.join(u,t.relative(d,e)),dest2import(t){return this.dst2ImportMap[t]},raw2Relative(e){let i=this.getAssetDb().mountInfoByPath(e);if(!i)throw`Can not get mount info by path: ${e}`;return t.join(i.mountPath,t.relative(i.path,e))},isScript:t=>"javascript"===t||"typescript"===t,isPlugin(t){var e=this.getAssetDb()._uuid2meta[t]||this.getAssetDb().loadMetaByUuid(t);return e&&e.isPlugin},needCompile(t,e){return"javascript"===t?!this.isPlugin(e):"typescript"===t}};module.exports=b;