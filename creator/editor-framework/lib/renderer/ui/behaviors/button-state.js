"use strict";const e=require("../utils/dom-utils"),t=require("../utils/focus-mgr");function s(e){return null!==e.getAttribute("pressed")}let i={_initButtonState(i){e.installDownUpEvent(i),i.addEventListener("keydown",t=>{if(!this.disabled)if(32===t.keyCode)e.acceptEvent(t),this._setPressed(i,!0),this._canceledByEsc=!1;else if(13===t.keyCode){if(e.acceptEvent(t),this._enterTimeoutID)return;this._setPressed(i,!0),this._canceledByEsc=!1,this._enterTimeoutID=setTimeout(()=>{this._enterTimeoutID=null,this._setPressed(i,!1),i.click()},100)}else 27===t.keyCode&&(e.acceptEvent(t),s(i)&&(e.fire(i,"cancel",{bubbles:!1}),this._canceledByEsc=!0),this._setPressed(i,!1))}),i.addEventListener("keyup",t=>{32===t.keyCode&&(e.acceptEvent(t),s(i)&&setTimeout(()=>{i.click()},1),this._setPressed(i,!1))}),i.addEventListener("down",s=>{e.acceptEvent(s),t._setFocusElement(this),this._setPressed(i,!0),this._canceledByEsc=!1}),i.addEventListener("up",t=>{e.acceptEvent(t),this._setPressed(i,!1)}),i.addEventListener("click",t=>{if(this._onButtonClick(i,t),!this.readonly)return this._canceledByEsc?(this._canceledByEsc=!1,e.acceptEvent(t),void 0):void 0}),i.addEventListener("focus-changed",()=>{this.focused||this._setPressed(i,!1)})},_setPressed(e,t){t?e.setAttribute("pressed",""):e.removeAttribute("pressed")}};module.exports=i;