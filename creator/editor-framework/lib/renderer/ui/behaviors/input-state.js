"use strict";const e=require("../utils/dom-utils"),t=require("../utils/focus-mgr");let n={_initInputState(n){if(!this._onInputConfirm)throw new Error("Failed to init input-state: please implement _onInputConfirm");if(!this._onInputCancel)throw new Error("Failed to init input-state: please implement _onInputCancel");if(!this._onInputChange)throw new Error("Failed to init input-state: please implement _onInputChange");let s=n instanceof HTMLTextAreaElement;n._initValue=n.value,n._focused=!1,n._selectAllWhenMouseUp=!1,n._mouseStartX=-1,n.addEventListener("focus",()=>{n._focused=!0,n._initValue=n.value,!1===n._selectAllWhenMouseUp&&n.select()}),n.addEventListener("blur",()=>{n._focused=!1}),n.addEventListener("change",t=>{e.acceptEvent(t),this._onInputConfirm(n)}),n.addEventListener("input",t=>{e.acceptEvent(t),this._onInputChange(n)}),n.addEventListener("keydown",t=>{this.disabled||(t.stopPropagation(),13===t.keyCode?(!s||t.ctrlKey||t.metaKey)&&(e.acceptEvent(t),this._onInputConfirm(n,!0)):27===t.keyCode&&(e.acceptEvent(t),this._onInputCancel(n,!0)))}),n.addEventListener("keyup",e=>{e.stopPropagation()}),n.addEventListener("keypress",e=>{e.stopPropagation()}),n.addEventListener("mousedown",e=>{e.stopPropagation(),t._setFocusElement(this),n._mouseStartX=e.clientX,n._focused||(n._selectAllWhenMouseUp=!0)}),n.addEventListener("mouseup",e=>{e.stopPropagation(),n._selectAllWhenMouseUp&&(n._selectAllWhenMouseUp=!1,Math.abs(e.clientX-n._mouseStartX)<4&&n.select())})},_unselect(e){e.selectionStart=e.selectionEnd=-1}};module.exports=n;